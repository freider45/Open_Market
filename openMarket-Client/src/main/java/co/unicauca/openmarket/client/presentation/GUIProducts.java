package co.unicauca.openmarket.client.presentation;

import co.unicauca.openmaket.client.command.AddProductCommand;
import co.unicauca.openmaket.client.command.Invoker;
import co.unicauca.openmaket.client.command.RemoveProductCommand;
import co.unicauca.openmarket.client.domain.service.CategoryService;
import co.unicauca.openmarket.commons.domain.Category;
import co.unicauca.openmarket.commons.domain.Product;
import co.unicauca.openmarket.client.domain.service.ProductService;
import co.unicauca.openmarket.client.infra.Messages;
import co.unicauca.openmarket.commons.observer.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Libardo Pantoja
 */
public class GUIProducts extends javax.swing.JFrame implements Observer {

    private ProductService productService;
    private CategoryService categoryService;
    private boolean addOption;
    private Invoker invoker;


    /**
     * Creates new form GUIProducts
     */
    public GUIProducts(ProductService productService, CategoryService categoryService) {
        initComponents();
        this.productService = productService;
        this.categoryService = categoryService;
        this.invoker = new Invoker();
        this.invoker.registerObserver(this);
        stateInitial();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSouth = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnTerminarEdicion = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRehacer = new javax.swing.JButton();
        btnDeshacer = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnBorrarProducto = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        pnlSouth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        pnlSouth.add(btnNuevo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEditar);

        btnTerminarEdicion.setText("Terminar edici√≥n");
        btnTerminarEdicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminarEdicionActionPerformed(evt);
            }
        });
        pnlSouth.add(btnTerminarEdicion);

        btnSave.setText("Grabar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlSouth.add(btnSave);

        btnRehacer.setText("Rehacer");
        btnRehacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRehacerActionPerformed(evt);
            }
        });
        pnlSouth.add(btnRehacer);

        btnDeshacer.setText("Deshacer");
        btnDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshacerActionPerformed(evt);
            }
        });
        pnlSouth.add(btnDeshacer);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCancelar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEliminar);

        btnFind.setText("Buscar");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        pnlSouth.add(btnFind);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCerrar);

        btnBorrarProducto.setText("Borrar producto");
        btnBorrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProductoActionPerformed(evt);
            }
        });
        pnlSouth.add(btnBorrarProducto);

        getContentPane().add(pnlSouth, java.awt.BorderLayout.SOUTH);

        pnlCenter.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblId.setText("id*:");
        lblId.setName(""); // NOI18N

        jLabel5.setText("nombre*:");

        jLabel6.setText("descripcion*:");

        jLabel7.setText("idCategoria*:");

        txtCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoryActionPerformed(evt);
            }
        });

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        jLabel1.setText("precio*");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addComponent(lblId)
                        .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)))
                    .addComponent(jLabel7))
                .addGap(68, 68, 68)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtId)
                    .addComponent(txtName)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(txtCategory)
                    .addComponent(txtPrecio))
                .addContainerGap(427, Short.MAX_VALUE))
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId))
                .addGap(23, 23, 23)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCenterLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(29, 29, 29)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(52, 52, 52))
        );

        lblId.getAccessibleContext().setAccessibleName("");
        lblId.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        stateNew();
        txtId.requestFocus();
        addOption = true;
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        stateInitial();
        cleanControls();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtName.getText().trim().equals("")
                || txtCategory.getText().trim().equals("")
                || txtDescription.getText().trim().equals("")
                || txtPrecio.getText().trim().equals("")
                || txtId.getText().trim().equals("")) {
            Messages.showMessageDialog("Debe llenar todos los datos", "Atenci√≥n");
            txtName.requestFocus();
            return;
        }

        try {
            //Agregar
            addProduct();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        addOption = false;
        stateEdit();
        txtId.requestFocus();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            String id = txtId.getText().trim();
            if (id.equals("")) {
                Messages.showMessageDialog("Debe buscar el producto a eliminar", "Atenci√≥n");
                txtId.requestFocus();
                return;
            }
            Long productId = Long.valueOf(id);
            if (Messages.showConfirmDialog("Est√° seguro que desea eliminar este producto?", "Confirmaci√≥n") == JOptionPane.YES_NO_OPTION) {
                Product product = productService.findProductById(productId);
                RemoveProductCommand comm = new RemoveProductCommand(productService, product);

                if (invoker.executeCommand(comm)) {
                    Messages.showMessageDialog("Producto eliminado con √©xito", "Atenci√≥n");
                    stateInitial();
                    cleanControls();
                } else {
                    Messages.showMessageDialog("Error al eliminar, lo siento mucho", "Atenci√≥n");
                }

            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null,
                    "El id debe ser un numero",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null,
                    e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        GUIProductsFind instance = new GUIProductsFind(this, false, productService, categoryService);
        productService.registerObserver(instance);
        categoryService.registerObserver(instance);
        instance.setVisible(true);
    }//GEN-LAST:event_btnFindActionPerformed

    private void txtCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoryActionPerformed

    private void btnBorrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProductoActionPerformed
        addOption = false;
        stateDelete();
        txtId.requestFocus();

    }//GEN-LAST:event_btnBorrarProductoActionPerformed

    private void btnTerminarEdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminarEdicionActionPerformed
        try {
            if (txtId.getText().trim().equals("")) {
                Messages.showMessageDialog("Debe ingresar el id del producto", "Atenci√≥n");
                txtId.requestFocus();
                return;
            }
            //Editar
            editProduct();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnTerminarEdicionActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void btnDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshacerActionPerformed
        invoker.undoLastCommand();
        if (!invoker.hasMoreUndoCommands()) {
            this.btnDeshacer.setVisible(false);
        }
    }//GEN-LAST:event_btnDeshacerActionPerformed

    private void btnRehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRehacerActionPerformed
        invoker.redoLastCommand();
        if (!invoker.hasMoreRedoCommands()) {
            this.btnRehacer.setVisible(false);
        }
    }//GEN-LAST:event_btnRehacerActionPerformed
    private void stateEdit() {

        btnNuevo.setVisible(false);
        btnEditar.setVisible(false);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(false);
        btnFind.setVisible(false);
        txtName.setEnabled(true);
        txtDescription.setEnabled(true);
        txtCategory.setEnabled(true);
        txtId.setEnabled(true);
        btnBorrarProducto.setVisible(false);
        btnTerminarEdicion.setVisible(true);
        txtId.setToolTipText("Digite el id del producto a editar");
        lblId.setText("*Id del producto a editar");
        txtPrecio.setEnabled(true);
        btnDeshacer.setVisible(false);
        btnRehacer.setVisible(false);
    }

    private void stateInitial() {
       
        btnNuevo.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(false);
        btnBorrarProducto.setVisible(true);
        btnCancelar.setVisible(false);
        btnCerrar.setVisible(true);
        btnSave.setVisible(false);
        btnFind.setVisible(true);
        btnTerminarEdicion.setVisible(false);
        txtId.setEnabled(false);
        txtName.setEnabled(false);
        txtDescription.setEnabled(false);
        txtCategory.setEnabled(false);
        lblId.setText("*Id");
        txtPrecio.setEnabled(false);
          
            btnDeshacer.setVisible(invoker.hasMoreUndoCommands());
            btnRehacer.setVisible(invoker.hasMoreRedoCommands());

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrarProducto;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnDeshacer;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRehacer;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTerminarEdicion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlSouth;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    private void stateNew() {

        btnNuevo.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(false);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(true);
        btnFind.setVisible(false);
        txtId.setEnabled(true);
        txtName.setEnabled(true);
        txtDescription.setEnabled(true);
        txtCategory.setEnabled(true);
        btnBorrarProducto.setVisible(false);
        txtPrecio.setEnabled(true);
                btnDeshacer.setVisible(false);
        btnRehacer.setVisible(false);

    }

    private void cleanControls() {
        txtId.setText("");
        txtName.setText("");
        txtDescription.setText("");
        txtCategory.setText("");
        txtPrecio.setText("");

    }

    private void addProduct() {
        try {
            String id = txtId.getText().trim();
            String name = txtName.getText().trim();
            String description = txtDescription.getText().trim();
            Long categoryId = Long.valueOf(this.txtCategory.getText().trim());
            Double price = Double.valueOf(txtPrecio.getText().trim());
            Product prod = new Product(Long.valueOf(id), name, description, price, categoryId);

            AddProductCommand comm = new AddProductCommand(productService, prod);

            if (invoker.executeCommand(comm)) {
                Messages.showMessageDialog("Se grab√≥ con √©xito", "Atenci√≥n");

                cleanControls();
                stateInitial();

            } else {
                Messages.showMessageDialog("El id ya existe,ingrese otro", "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void editProduct() throws Exception {
        Long productId = Long.valueOf(txtId.getText().trim());

        Product prod = productService.findProductById(productId);

        if (!txtName.getText().isEmpty()) {
            prod.setName(txtName.getText().trim());
        }
        if (!txtDescription.getText().isEmpty()) {
            prod.setDescription(txtDescription.getText().trim());
        }
        if (!txtPrecio.getText().isEmpty()) {
            prod.setPrice(Double.parseDouble(txtPrecio.getText().trim()));
        }
        if (!txtCategory.getText().isEmpty()) {

            Category cat = categoryService.findCategoryById(Long.valueOf(txtCategory.getText()));
            if (cat == null) {
                JOptionPane.showMessageDialog(null,
                        "La categoria no existe, ingrese una valida",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            prod.setCategoryId(cat.getCategoryId());

        }

        if (productService.editProduct(productId, prod)) {
            Messages.showMessageDialog("Se edit√≥ con √©xito", "Atenci√≥n");
            cleanControls();
            stateInitial();
        } else {
            Messages.showMessageDialog("Error al editar, lo siento mucho", "Atenci√≥n");
        }
    }

    private void stateDelete() {
        
        btnNuevo.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(true);
        btnCancelar.setVisible(true);
        btnBorrarProducto.setVisible(false);
        btnCerrar.setVisible(false);
        btnSave.setVisible(false);
        btnFind.setVisible(false);
        txtId.setEnabled(true);
        txtName.setEnabled(false);
        txtDescription.setEnabled(false);
        txtCategory.setEnabled(false);
        btnDeshacer.setVisible(false);
        btnRehacer.setVisible(false);
    }

    @Override
    public void update() {
  
            btnDeshacer.setVisible(invoker.hasMoreUndoCommands());
            btnRehacer.setVisible(invoker.hasMoreRedoCommands());
        

    }
}
